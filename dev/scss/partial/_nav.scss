$navItemClasses: "technical-summary", "experience", "portfolio", "contact";
$navBGColors: $color-blue-medium, $color-red-medium, $color-green-medium, $color-orange-medium;
$navHoverBGColors: $color-blue-light, $color-red-light, $color-green-light, $color-orange-light;

nav {
	position: relative;
	z-index: 10;
	font-size: 2em;
	@include setFont("montserrat", 200, normal);
	margin: 0 -15px;
	cursor: pointer;
	@include prefixProp("user-select", "none");

	&.content-background {
		padding: 0;
	}

	svg {
		&.mobile-nav-menu {
			width: 70px;
			height: 70px;
			position: fixed;
			right: .5em;
			bottom: .5em;
			background: transparent;

			circle,
			rect {
				@include prefixProp("transition", "fill #{$section-transition-speed} linear");
			}

			circle {
				@include prefixProp("filter", "drop-shadow( -5px -5px 5px #{$color-black})");
			}
		}
	}

	.navigation-wrapper-outer {
		position: fixed;
		bottom: 0;
		right: 0;
		width:100%;
		padding-bottom:100%;
		@include prefixProp("transform", "scale(0)");
		@include prefixProp("transition", "transform 150ms");
		@include prefixProp("transform-origin", "bottom right");

		&.active {
			@include prefixProp("transform", "scale(1)");
		}
	}

	.navigation-wrapper {
		ul {
			border-top-left-radius: 100%;
			border-top-right-radius: 2%;
			border-bottom-left-radius: 2%;
			border-bottom-right-radius: 0;
			display:block;
			position:absolute;
			overflow:hidden;
			width: 100%;
			height: 100%;

			li {
				position: absolute;
				bottom: 0;
				right: 0;
				width: 600%;
				height: 100%;
				@include prefixProp("transform-origin", "bottom right");

				&.active {
					@include setFont("montserrat", 400, normal);
				}

				//Outputs specific styles for nav LI elements
				//To add to this, modify the arrays at the top of the file.
				//The rest should handle itself.
				@each $navItem in $navItemClasses {
					$i: index($navItemClasses, $navItem);
					$deg: 90 / length($navItemClasses); //#degrees each LI should take up in the wheel
					$rotation: 90 - $deg * $i; //Calculate actual rotation

					&.#{$navItem} {
						@include prefixProp("transform", "rotate(#{$rotation}deg)");
						z-index: 4 - $i;
						background-color: nth($navBGColors, $i);

						&:hover,
						&:active,
						&:focus,
						&.active,
						&[data-mobile-hover='true']{
							background-color: nth($navHoverBGColors, $i);
						}
					}
				}

				a {
					position: absolute;
					right: 0;
					bottom: 0;
					display: block;
					width: 16%;
					height: 100%;
					padding: 1em;

					span {
						position: absolute;
						bottom: .75em;
					}
				}
			}
		}
	}
}

@media screen and (orientation: landscape) {
	nav {
		.navigation-wrapper-outer {
			width:50%;
			padding-bottom: 50%;
		}
	}
}

@media screen and(min-width: $screen-sm-min) {
	nav {
		position: static;
		font-size: 1.5em;

		ul {
			position: static;
		}

		li {

			a {
				padding: .75em;
			}
		}

		.navigation-wrapper-outer{
			position:static;
			width:auto;
			height:auto;
			padding-bottom: 0;
			@include prefixProp("transform", "scale(1)");
		}

		.navigation-wrapper {
			ul {
				position: static;
				width: auto;
				height: auto;
				border-radius:0;

				li {
					position: static;
					width: auto;
					height: auto;
					background-color: transparent;

					//Override to reset rotation property from mobile
					@each $navItem in $navItemClasses {
						&.#{$navItem} {
							@include prefixProp("transform", "none");
							background-color:transparent;
						}
					}

					a {
						position: static;
						width: auto;
						height: auto;

						span {
							position: static;
						}
					}
				}
			}
		}
	}
}

@media screen and(min-width: $screen-md-min) {
	nav {
		margin-right: .25em;
	}
}

@media screen and(min-width: $screen-lg-min) {
	nav {
		margin-right: .5em;
		font-size: 1.6em;
	}
}

@media screen and(min-width: $screen-xl-min) {
	nav {
		margin-right: 1em;
		font-size: 1.75em;
	}
}